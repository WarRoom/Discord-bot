import discord
from discord.ext import commands, tasks
import asyncio
import random
from datetime import datetime, timedelta
import pytz
import os
from flask import Flask
from threading import Thread

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ ====
intents = discord.Intents.default()
intents.message_content = True
intents.messages = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix=[".", "!", "/"], intents=intents, help_command=None)

# ==== –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render / UptimeRobot ====
app = Flask('')

@app.route('/')
def home():
    return "–ë–æ—Ç –∂–∏–≤!"

def run_web():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run_web)
    t.start()

# ==== –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –ø–æ –¥–∞—Ç–∞–º ====
channel_renames = {
    "2025-07-12": "–õ–µ—Ç–æ üåû",
    "2025-07-13": "–û—Å–µ–Ω—å üçÇ",
    "2025-07-14": "–ó–∏–º–∞ ‚ùÑÔ∏è",
    "2025-07-15": "–í–µ—Å–Ω–∞ üå∏"
}

RENAME_CHANNEL_ID = 123456789012345678  # –ó–ê–ú–ï–ù–ò –Ω–∞ ID –∫–∞–Ω–∞–ª–∞
YOUR_GUILD_ID = 123456789012345678      # –ó–ê–ú–ï–ù–ò –Ω–∞ ID —Å–µ—Ä–≤–µ—Ä–∞

@tasks.loop(minutes=1)
async def rename_channel_loop():
    now = datetime.now(pytz.timezone("Europe/Moscow"))
    today_str = now.strftime("%Y-%m-%d")
    guild = bot.get_guild(YOUR_GUILD_ID)
    channel = guild.get_channel(RENAME_CHANNEL_ID)
    if channel and today_str in channel_renames:
        new_name = channel_renames[today_str]
        if channel.name != new_name:
            await channel.edit(name=new_name)
            print(f"–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –∫–∞–Ω–∞–ª: {new_name}")

# ==== –ü—Ä–æ—Å—Ç–µ–π—à–∏–µ –∫–æ–º–∞–Ω–¥—ã ====

@bot.command(help="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –±–æ—Ç–∞")
async def hello(ctx):
    await ctx.send("–ü—Ä–∏–≤–µ—Ç!")

@bot.command(help="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ –ú–°–ö")
async def time(ctx):
    now = datetime.now(pytz.timezone("Europe/Moscow"))
    await ctx.send(f"üïí –°–µ–π—á–∞—Å {now.strftime('%d.%m.%Y %H:%M:%S')} –ú–°–ö")

@bot.command(help="–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É")
async def coin(ctx):
    await ctx.send(random.choice(["–û—Ä—ë–ª", "–†–µ—à–∫–∞"]))

@bot.command(help="–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫")
async def dice(ctx):
    await ctx.send(f"–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {random.randint(1, 6)}")

@bot.command(help="–í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞")
async def choose(ctx, *, options):
    items = [item.strip() for item in options.split(',')]
    if len(items) < 2:
        await ctx.send("–í–≤–µ–¥–∏ —Ö–æ—Ç—è –±—ã 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.")
    else:
        await ctx.send(f"–Ø –≤—ã–±–∏—Ä–∞—é: {random.choice(items)}")

@bot.command(help="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ–π Discord ID")
async def myid(ctx):
    await ctx.send(f"–¢–≤–æ–π ID: {ctx.author.id}")

@bot.command(help="–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
@commands.has_permissions(manage_messages=True)
async def purge(ctx, amount: int):
    deleted = await ctx.channel.purge(limit=amount)
    await ctx.send(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π", delete_after=3)

@bot.command(help="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
@commands.has_permissions(administrator=True)
async def say(ctx, *, message):
    await ctx.message.delete()
    await ctx.send(message)

@bot.command(help="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
@commands.has_permissions(administrator=True)
async def sayto(ctx, channel: discord.TextChannel, *, message):
    await ctx.message.delete()
    await channel.send(message)

# ==== –û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è ====
greeting_words = ["–ø—Ä–∏–≤–µ—Ç", "–∫—É", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é"]
farewells = ["–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—á–∞–æ", "–±–∞–π"]
thanks = ["—Å–ø–∞—Å–∏–±–æ", "–±–ª–∞–≥–æ–¥–∞—Ä—é"]
swear_words = ["–º–∞—Ç1", "–º–∞—Ç2", "–º–∞—Ç3"]  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ
user_swears = {}

@bot.event
async def on_message(message):
    if message.author.bot:
        return
    content = message.content.lower()
    mentioned = bot.user in message.mentions
    replied = message.reference and (await message.channel.fetch_message(message.reference.message_id)).author == bot.user

    if mentioned or replied:
        if any(word in content for word in greeting_words):
            await message.channel.send(random.choice(["–ü—Ä–∏–≤–µ—Ç!", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!", "–ö—É!", "–î–æ–±—Ä—ã–π –¥–µ–Ω—å!", "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"]))
        elif any(word in content for word in farewells):
            await message.channel.send(random.choice(["–ü–æ–∫–∞!", "–î–æ –≤—Å—Ç—Ä–µ—á–∏!", "–ß–∞–æ!", "–£–¥–∞—á–∏!", "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"]))
        elif "–∫—Ç–æ —Ç—ã" in content:
            await message.channel.send("–Ø Discord-–±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –∏ —Ä–∞–∑–≤–ª–µ–∫–∞—Ç—å!")
        elif "–∫–∞–∫ –¥–µ–ª–∞" in content:
            await message.channel.send(random.choice(["–ù–æ—Ä–º–∞–ª—å–Ω–æ.", "–û—Ç–ª–∏—á–Ω–æ!", "–ü–æ–∫–∞ –∂–∏–≤, –≤—Å—ë —Ö–æ—Ä–æ—à–æ.", "–õ—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞.", "–ñ–∏–≤—É, —Ä–∞–±–æ—Ç–∞—é!"]))
        elif any(word in content for word in thanks):
            await message.channel.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞!")

    await handle_swears(message)
    await bot.process_commands(message)

async def handle_swears(message):
    content = message.content.lower()
    author = message.author
    if any(word in content for word in swear_words):
        now = datetime.utcnow()
        swears = user_swears.get(author.id, [])
        swears = [t for t in swears if now - t < timedelta(hours=12)]
        swears.append(now)
        user_swears[author.id] = swears

        if len(set([t.minute for t in swears])) >= 3:
            mute_role = discord.utils.get(message.guild.roles, name="Muted")
            if mute_role:
                await author.add_roles(mute_role)
                await message.channel.send(f"{author.mention}, —Ç—ã —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä—É–≥–∞–µ—à—å—Å—è. –¢–µ–±–µ –º—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç.")
                await asyncio.sleep(1800)
                await author.remove_roles(mute_role)
        else:
            await message.channel.send(f"{author.mention}, —Ç–∏—à–µ, –∞ —Ç–æ –∞–¥–º–∏–Ω —É—Å–ª—ã—à–∏—Ç!")

# ==== –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ ====
DAYS = {
    "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": 0, "–≤—Ç–æ—Ä–Ω–∏–∫": 1, "—Å—Ä–µ–¥–∞": 2,
    "—á–µ—Ç–≤–µ—Ä–≥": 3, "–ø—è—Ç–Ω–∏—Ü–∞": 4, "—Å—É–±–±–æ—Ç–∞": 5, "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": 6
}
clean_schedule = {}
clean_report_channel_id = None

@bot.command(help="–î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞–Ω–∞–ª –≤ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É")
@commands.has_permissions(administrator=True)
async def setclean(ctx, channel: discord.TextChannel, day: str, time_str: str):
    day = day.lower()
    if day not in DAYS:
        await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.")
        return
    try:
        hour, minute = map(int, time_str.split(":"))
        clean_schedule[channel.id] = {"day": DAYS[day], "hour": hour, "minute": minute}
        await ctx.send(f"–ö–∞–Ω–∞–ª {channel.mention} –±—É–¥–µ—Ç –æ—á–∏—â–∞—Ç—å—Å—è: {day.capitalize()} {time_str}")
    except:
        await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ò—Å–ø–æ–ª—å–∑—É–π HH:MM")

@bot.command(help="–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π")
async def cleanchannels(ctx):
    if not clean_schedule:
        await ctx.send("–ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ —Å –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–æ–π.")
        return
    text = "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏:\n"
    for cid, sched in clean_schedule.items():
        channel = bot.get_channel(cid)
        day_str = list(DAYS.keys())[list(DAYS.values()).index(sched['day'])].capitalize()
        time_str = f"{sched['hour']:02d}:{sched['minute']:02d}"
        text += f"- {channel.mention if channel else f'Unknown (ID: {cid})'} ‚Äî {day_str} {time_str} –ú–°–ö\n"
    await ctx.send(text)

@bot.command(help="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ –æ–± –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–µ")
@commands.has_permissions(administrator=True)
async def setcleanreport(ctx, channel: discord.TextChannel):
    global clean_report_channel_id
    clean_report_channel_id = channel.id
    await ctx.send(f"–ö–∞–Ω–∞–ª {channel.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤.")

@tasks.loop(minutes=1)
async def cleaner_loop():
    now = datetime.now(pytz.timezone("Europe/Moscow"))
    report_lines = []
    for cid, sched in clean_schedule.items():
        if now.weekday() == sched["day"] and now.hour == sched["hour"] and now.minute == sched["minute"]:
            channel = bot.get_channel(cid)
            if channel:
                deleted = await channel.purge(limit=1000)
                try:
                    await channel.send(f"‚úÖ –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞: —É–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", delete_after=5)
                except:
                    pass
                report_lines.append(f"- {channel.mention}: {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    if report_lines and clean_report_channel_id:
        report_channel = bot.get_channel(clean_report_channel_id)
        if report_channel:
            now_str = now.strftime("%d.%m.%Y %H:%M")
            await report_channel.send(f"üßº **–û—Ç—á—ë—Ç ({now_str} –ú–°–ö):**\n" + "\n".join(report_lines))

# ==== –ö–æ–º–∞–Ω–¥–∞ help ====

@bot.command(help="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥")
async def help(ctx):
    help_text = "üìñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
    for command in bot.commands:
        if command.name not in ["say", "sayto"]:
            help_text += f".{command.name} ‚Äî {command.help or '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}\n"
    await ctx.send(help_text)

# ==== –ó–∞–ø—É—Å–∫ ====

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    cleaner_loop.start()
    rename_channel_loop.start()

keep_alive()
bot.run(os.getenv("TOKEN"))
